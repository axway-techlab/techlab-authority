openapi: 3.0.1
info:
  title: HAPI FHIR Server
  contact: {}
  version: 5.7.0-PRE9-SNAPSHOT/095b959917/2022-01-07
servers:
- url: http://hapi.fhir.org/baseR4
  description: HAPI FHIR Server
tags:
- name: Appointment
  description: The Appointment FHIR resource type
paths:
  /Appointment/{id}:
    get:
      tags:
      - Appointment
      summary: "read-instance: Read Appointment instance"
      parameters:
      - $ref: '#/components/parameters/_pretty'
      - $ref: '#/components/parameters/_format'
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: "123"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
    put:
      tags:
      - Appointment
      summary: "update-instance: Update an existing Appointment instance, or create\
        \ using a client-assigned ID"
      parameters:
      - $ref: '#/components/parameters/_pretty'
      - $ref: '#/components/parameters/_format'
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: "123"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            example: |-
              {
                "resourceType": "Appointment"
              }
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
    delete:
      tags:
      - Appointment
      summary: "instance-delete: Perform a logical delete on a resource instance"
      parameters:
      - $ref: '#/components/parameters/_pretty'
      - $ref: '#/components/parameters/_format'
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: "123"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
    patch:
      tags:
      - Appointment
      summary: "instance-patch: Patch a resource instance of type Appointment by ID"
      parameters:
      - $ref: '#/components/parameters/_pretty'
      - $ref: '#/components/parameters/_format'
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: "123"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            example: |-
              {
                "resourceType": "Parameters",
                "parameter": [ {
                  "name": "operation",
                  "part": [ {
                    "name": "type",
                    "valueString": "add"
                  }, {
                    "name": "path",
                    "valueString": "Patient"
                  }, {
                    "name": "name",
                    "valueString": "birthDate"
                  }, {
                    "name": "value",
                    "valueDate": "1930-01-01"
                  } ]
                } ]
              }
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
  /Appointment/{id}/_history/{version_id}:
    get:
      tags:
      - Appointment
      summary: "vread-instance: Read Appointment instance with specific version"
      parameters:
      - $ref: '#/components/parameters/_pretty'
      - $ref: '#/components/parameters/_format'
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: "123"
      - name: version_id
        in: path
        description: The resource version ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: "1"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
  /Appointment:
    get:
      tags:
      - Appointment
      summary: "search-type: Search for Appointment instances"
      description: This is a search type
      parameters:
      - $ref: '#/components/parameters/_pretty'
      - $ref: '#/components/parameters/_format'
      - name: date
        in: query
        description: Appointment date/time.
        style: simple
      - name: specialty
        in: query
        description: The specialty of a practitioner that would be required to perform
          the service requested in this appointment
        style: simple
      - name: service-category
        in: query
        description: A broad categorization of the service that is to be performed
          during this appointment
        style: simple
      - name: _lastUpdated
        in: query
        description: When the resource version last changed
        style: simple
      - name: slot
        in: query
        description: The slots that this appointment is filling
        style: simple
      - name: reason-code
        in: query
        description: Coded reason this appointment is scheduled
        style: simple
      - name: based-on
        in: query
        description: The service request this appointment is allocated to assess
        style: simple
      - name: patient
        in: query
        description: One of the individuals of the appointment is this patient
        style: simple
      - name: supporting-info
        in: query
        description: Additional information to support the appointment
        style: simple
      - name: identifier
        in: query
        description: An Identifier of the Appointment
        style: simple
      - name: practitioner
        in: query
        description: One of the individuals of the appointment is this practitioner
        style: simple
      - name: appointment-type
        in: query
        description: The style of appointment or patient that has been booked in the
          slot (not service type)
        style: simple
      - name: part-status
        in: query
        description: "The Participation status of the subject, or other participant\
          \ on the appointment. Can be used to locate participants that have not responded\
          \ to meeting requests."
        style: simple
      - name: service-type
        in: query
        description: The specific service that is to be performed during this appointment
        style: simple
      - name: _security
        in: query
        description: Security Labels applied to this resource
        style: simple
      - name: _filter
        in: query
        description: Search the contents of the resource's data using a filter
        style: simple
      - name: actor
        in: query
        description: Any one of the individuals participating in the appointment
        style: simple
      - name: _profile
        in: query
        description: Profiles this resource claims to conform to
        style: simple
      - name: _tag
        in: query
        description: Tags applied to this resource
        style: simple
      - name: _has
        in: query
        description: Return resources linked to by the given target
        style: simple
      - name: reason-reference
        in: query
        description: Reason the appointment is to take place (resource)
        style: simple
      - name: _source
        in: query
        description: Identifies where the resource comes from
        style: simple
      - name: location
        in: query
        description: This location is listed in the participants of the appointment
        style: simple
      - name: _id
        in: query
        description: Logical id of this artifact
        style: simple
      - name: _text
        in: query
        description: Search on the narrative of the resource
        style: simple
      - name: _content
        in: query
        description: Search on the entire content of the resource
        style: simple
      - name: status
        in: query
        description: The overall status of the appointment
        style: simple
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
    post:
      tags:
      - Appointment
      summary: "create-type: Create a new Appointment instance"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
            example: |-
              {
                "resourceType": "Appointment"
              }
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
  /Appointment/_history:
    get:
      tags:
      - Appointment
      summary: "type-history: Fetch the resource change history for all resources\
        \ of type Appointment"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
  /Appointment/{id}/_history:
    get:
      tags:
      - Appointment
      summary: "instance-history: Fetch the resource change history for all resources\
        \ of type Appointment"
      parameters:
      - $ref: '#/components/parameters/_pretty'
      - $ref: '#/components/parameters/_format'
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: "123"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
  /Appointment/$expunge:
    post:
      tags:
      - Appointment
      requestBody:
        content:
          application/json:
            schema:
              title: FHIR Resource
              type: object
            example: |-
              {
                "resourceType": "Parameters",
                "parameter": [ {
                  "name": "limit",
                  "valueInteger": 0
                }, {
                  "name": "expungeDeletedResources",
                  "valueBoolean": false
                }, {
                  "name": "expungePreviousVersions",
                  "valueBoolean": false
                }, {
                  "name": "expungeEverything",
                  "valueBoolean": false
                }, {
                  "name": "count"
                } ]
              }
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
  /Appointment/{id}/$expunge:
    post:
      tags:
      - Appointment
      parameters:
      - $ref: '#/components/parameters/_pretty'
      - $ref: '#/components/parameters/_format'
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: "123"
      requestBody:
        content:
          application/json:
            schema:
              title: FHIR Resource
              type: object
            example: |-
              {
                "resourceType": "Parameters",
                "parameter": [ {
                  "name": "limit",
                  "valueInteger": 0
                }, {
                  "name": "expungeDeletedResources",
                  "valueBoolean": false
                }, {
                  "name": "expungePreviousVersions",
                  "valueBoolean": false
                }, {
                  "name": "expungeEverything",
                  "valueBoolean": false
                }, {
                  "name": "count"
                } ]
              }
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
  /Appointment/$meta:
    get:
      tags:
      - Appointment
      description: "Request a global list of tags, profiles, and security labels"
      parameters:
      - $ref: '#/components/parameters/_pretty'
      - $ref: '#/components/parameters/_format'
      - name: return
        in: query
        required: false
        style: simple
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
  /Appointment/{id}/$meta:
    get:
      tags:
      - Appointment
      description: "Request a global list of tags, profiles, and security labels"
      parameters:
      - $ref: '#/components/parameters/_pretty'
      - $ref: '#/components/parameters/_format'
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: "123"
      - name: return
        in: query
        required: false
        style: simple
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
  /Appointment/{id}/$meta-add:
    post:
      tags:
      - Appointment
      description: "Add tags, profiles, and/or security labels to a resource"
      parameters:
      - $ref: '#/components/parameters/_pretty'
      - $ref: '#/components/parameters/_format'
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: "123"
      requestBody:
        content:
          application/json:
            schema:
              title: FHIR Resource
              type: object
            example: |-
              {
                "resourceType": "Parameters",
                "parameter": [ {
                  "name": "meta"
                }, {
                  "name": "return"
                } ]
              }
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
  /Appointment/{id}/$meta-delete:
    post:
      tags:
      - Appointment
      description: "Delete tags, profiles, and/or security labels from a resource"
      parameters:
      - $ref: '#/components/parameters/_pretty'
      - $ref: '#/components/parameters/_format'
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: "123"
      requestBody:
        content:
          application/json:
            schema:
              title: FHIR Resource
              type: object
            example: |-
              {
                "resourceType": "Parameters",
                "parameter": [ {
                  "name": "meta"
                }, {
                  "name": "return"
                } ]
              }
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
  /Appointment/$validate:
    get:
      tags:
      - Appointment
      parameters:
      - $ref: '#/components/parameters/_pretty'
      - $ref: '#/components/parameters/_format'
      - name: resource
        in: query
        required: false
        style: simple
      - name: mode
        in: query
        required: false
        style: simple
      - name: profile
        in: query
        required: false
        style: simple
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
  /Appointment/{id}/$validate:
    get:
      tags:
      - Appointment
      parameters:
      - $ref: '#/components/parameters/_pretty'
      - $ref: '#/components/parameters/_format'
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: "123"
      - name: resource
        in: query
        required: false
        style: simple
      - name: mode
        in: query
        required: false
        style: simple
      - name: profile
        in: query
        required: false
        style: simple
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
  /Appointment/{id}/$graphql:
    get:
      tags:
      - Appointment
      description: "This operation invokes a GraphQL expression for fetching an joining\
        \ a graph of resources, returning them in a custom format."
      parameters:
      - $ref: '#/components/parameters/_pretty'
      - $ref: '#/components/parameters/_format'
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: "123"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
  /Appointment/{id}/$diff:
    get:
      tags:
      - Appointment
      summary: Comparte two resources or two versions of a single resource
      description: "This operation examines two resource versions (can be two versions\
        \ of the same resource, or two different resources) and generates a FHIR Patch\
        \ document showing the differences."
      parameters:
      - $ref: '#/components/parameters/_pretty'
      - $ref: '#/components/parameters/_format'
      - name: id
        in: path
        description: The resource ID
        required: true
        style: simple
        schema:
          minimum: 1
          type: string
        example: "123"
      - name: from
        in: query
        description: The resource ID and version to diff from
        required: true
        style: simple
        example: Patient/example/version/1
      - name: to
        in: query
        description: The resource ID and version to diff to
        required: true
        style: simple
        example: Patient/example/version/2
      - name: includeMeta
        in: query
        description: Should differences in the Resource.meta element be included in
          the diff
        required: false
        style: simple
        example: "false"
      - name: fromVersion
        in: query
        description: The resource ID and version to diff from
        required: false
        style: simple
        example: Patient/example/version/1
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FHIR-JSON-RESOURCE'
components:
  schemas:
    FHIR-JSON-RESOURCE:
      type: object
      description: A FHIR resource
  parameters:
    _pretty:
      name: _pretty
      in: query
      required: false
      schema:
        type: boolean
    _format:
      name: _format
      in: query
      required: true
      schema:
        type: string
        default: json
        enum:
          - json
          - xml
